// 合并后的完整单文件模块
CHIP Decoder201801673 {
    IN A, B, C, D;
    OUT a, b, c, d, e, f, g;

    PARTS:
    // --- a 的逻辑 ---
    Not(in = A, out = NOTA_a);
    Not(in = B, out = NOTB_a);
    Not(in = C, out = NOTC_a);
    Not(in = D, out = NOTD_a);

    And(a = NOTB_a, b = NOTD_a, out = P1_a);
    And(a = C, b = NOTD_a, out = P2_a);
    And(a = A, b = B, out = P3_a);
    And(a = A, b = C, out = P4_a);

    Or(a = P1_a, b = P2_a, out = P12_a);
    Or(a = P3_a, b = P4_a, out = P34_a);
    Or(a = P12_a, b = P34_a, out = a);

    // --- b 的逻辑 ---
    Not(in = A, out = NOTA_b);
    Not(in = B, out = NOTB_b);
    Not(in = C, out = NOTC_b);
    Not(in = D, out = NOTD_b);

    And(a = NOTB_b, b = NOTD_b, out = P1_b);
    And(a = NOTB_b, b = NOTC_b, out = P2_b);
    And(a = NOTA_b, b = C, out = NOTAc_b);
    And(a = NOTAc_b, b = D, out = P3_b);
    And(a = A, b = NOTC_b, out = ANOTC_b);
    And(a = ANOTC_b, b = D, out = P4_b);
    And(a = NOTA_b, b = NOTC_b, out = NOTAC_b);
    And(a = NOTAC_b, b = NOTD_b, out = P5_b);

    // b 的 Or5 结构
    Or(a = P1_b, b = P2_b, out = ab1);
    Or(a = ab1, b = P3_b, out = ab2);
    Or(a = ab2, b = P4_b, out = ab3);
    Or(a = ab3, b = P5_b, out = b);

    // --- c 的逻辑 ---
    Not(in = A, out = NOTA_c);
    Not(in = B, out = NOTB_c);
    Not(in = C, out = NOTC_c);
    Not(in = D, out = NOTD_c);

    And(a = NOTB_c, b = NOTD_c, out = P1_c);
    And(a = B, b = C, out = P2_c);
    And(a = A, b = NOTD_c, out = P3_c);
    And(a = NOTA_c, b = C, out = P4_c);
    And(a = A, b = NOTB_c, out = NOTBa_c);
    And(a = NOTBa_c, b = NOTC_c, out = P5_c);
    And(a = NOTA_c, b = B, out = NOTAb_c);
    And(a = NOTAb_c, b = D, out = P6_c);

    Or(a = P1_c, b = P2_c, out = ca1);
    Or(a = ca1, b = P3_c, out = ca2);
    Or(a = ca2, b = P4_c, out = ca3);
    Or(a = ca3, b = P5_c, out = ca4);
    Or(a = ca4, b = P6_c, out = c);

    // --- d 的逻辑 ---
    Not(in = A, out = NOTA_d);
    Not(in = B, out = NOTB_d);
    Not(in = C, out = NOTC_d);
    Not(in = D, out = NOTD_d);

    And(a = A, b = NOTB_d, out = P1_d);
    And(a = NOTC_d, b = D, out = P2_d);
    And(a = NOTA_d, b = B, out = P3_d);
    And(a = NOTA_d, b = D, out = P4_d);
    And(a = NOTB_d, b = NOTC_d, out = P5_d);

    Or(a = P1_d, b = P2_d, out = da1);
    Or(a = da1, b = P3_d, out = da2);
    Or(a = da2, b = P4_d, out = da3);
    Or(a = da3, b = P5_d, out = d);

    // --- e 的逻辑 ---
    Not(in = A, out = NOTA_e);
    Not(in = B, out = NOTB_e);
    Not(in = C, out = NOTC_e);
    Not(in = D, out = NOTD_e);

    And(a = NOTB_e, b = C, out = P1_e);
    And(a = C, b = NOTD_e, out = P2_e);
    And(a = A, b = NOTB_e, out = P3_e);
    And(a = A, b = D, out = P4_e);
    And(a = NOTC_e, b = NOTA_e, out = tmp_e);
    And(a = B, b = tmp_e, out = P5_e);

    Or(a = P1_e, b = P2_e, out = ea1);
    Or(a = ea1, b = P3_e, out = ea2);
    Or(a = ea2, b = P4_e, out = ea3);
    Or(a = ea3, b = P5_e, out = e);

    // --- f 的逻辑 ---
    Not(in = A, out = NOTA_f);
    Not(in = B, out = NOTB_f);
    Not(in = C, out = NOTC_f);
    Not(in = D, out = NOTD_f);

    And(a = NOTC_f, b = NOTD_f, out = P1_f);
    And(a = NOTA_f, b = B, out = AB_f);
    And(a = AB_f, b = NOTC_f, out = P2_f);
    And(a = B, b = NOTD_f, out = P3_f);
    And(a = A, b = C, out = P4_f);
    And(a = A, b = NOTB_f, out = P5_f);

    Or(a = P1_f, b = P2_f, out = fa1);
    Or(a = P3_f, b = P4_f, out = fa2);
    Or(a = fa2, b = P5_f, out = fa3);
    Or(a = fa1, b = fa3, out = f);

    // --- g 的逻辑 ---
    Not(in = A, out = NOTA_g);
    Not(in = B, out = NOTB_g);
    Not(in = C, out = NOTC_g);
    Not(in = D, out = NOTD_g);

    And(a = A, b = B, out = AB_g);
    And(a = AB_g, b = NOTD_g, out = P1_g);
    And(a = NOTB_g, b = NOTC_g, out = BC_g);
    And(a = BC_g, b = NOTD_g, out = P2_g);
    And(a = B, b = NOTC_g, out = P3a_g);
    And(a = P3a_g, b = D, out = P3_g);
    And(a = NOTA_g, b = C, out = P4a_g);
    And(a = P4a_g, b = NOTD_g, out = P4_g);
    And(a = A, b = NOTB_g, out = P5a_g);
    And(a = P5a_g, b = D, out = P5_g);
    And(a = NOTA_g, b = NOTB_g, out = AB_g2);
    And(a = AB_g2, b = C, out = P6_g);

    Or(a = P1_g, b = P2_g, out = g1);
    Or(a = P3_g, b = P4_g, out = g2);
    Or(a = P5_g, b = P6_g, out = g3);
    Or(a = g1, b = g2, out = g4);
    Or(a = g4, b = g3, out = g);
} 